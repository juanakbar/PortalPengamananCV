import { parametersOfEncryptAndDecrypt, returnCreateKeys } from './utils/types';
declare class NodeRSA {
    private publicKeyPath;
    private privateKeyPath;
    private modulusLength;
    /**
     *
     * @param publicKeyPath this should be absolute path
     * @param privateKeyPath this should be absolute path
     */
    constructor(publicKeyPath?: string, privateKeyPath?: string, modulusLength?: number);
    /**
     *
     * @param {Object} args
     * @param {String} args.publicKeyPath
     * @param {String} args.text the text that you need to encrypt
     *
     * @returns {String}
     */
    encryptStringWithRsaPublicKey(args: parametersOfEncryptAndDecrypt): string;
    /**
     *
     * @param {Object} args
     * @param {String} args.privateKeyPath
     * @param {String} args.text the text that you need to decrypt
     *
     * @returns {String}
     */
    decryptStringWithRsaPrivateKey(args: parametersOfEncryptAndDecrypt): string;
    createPrivateAndPublicKeys(modulusLength?: number): returnCreateKeys;
}
export default NodeRSA;
